/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Pet.h
 *
 * A pet for sale in the pet store
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Pet_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Pet_H_


#include "../ModelBase.h"

#include "FString.h"
#include "TArray.h"
#include "Tag.h"
#include "int64.h"
#include "Category.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// A pet for sale in the pet store
/// </summary>
class  Pet
    : public ModelBase
{
public:
    Pet();
    virtual ~Pet();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Pet members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<int64> getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const std::shared_ptr<int64>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Category> getCategory() const;
    bool categoryIsSet() const;
    void unsetCategory();

    void setCategory(const std::shared_ptr<Category>& value);

    /// <summary>
    /// 
    /// </summary>
    FString getName() const;
    
    void setName(const FString& value);

    /// <summary>
    /// 
    /// </summary>
    TArray<FString>& getPhotoUrls();
    
    void setPhotoUrls(const TArray<FString>& value);

    /// <summary>
    /// 
    /// </summary>
    TArray<std::shared_ptr<Tag>>& getTags();
    bool tagsIsSet() const;
    void unsetTags();

    void setTags(const TArray<std::shared_ptr<Tag>>& value);

    /// <summary>
    /// pet status in the store
    /// </summary>
    FString getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const FString& value);


protected:
    std::shared_ptr<int64> m_Id;
    bool m_IdIsSet;
    std::shared_ptr<Category> m_Category;
    bool m_CategoryIsSet;
    FString m_Name;
        TArray<FString> m_PhotoUrls;
        TArray<std::shared_ptr<Tag>> m_Tags;
    bool m_TagsIsSet;
    FString m_Status;
    bool m_StatusIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Pet_H_ */
